tuple Arc{string o;string d;}
{Arc}arcs1=...; //??
{Arc}arcs2=...; //??
{Arc}arcs3=...; //??
{string} v1=...;
{string} v2=...;
{string} v3=...;
float C1[arcs1]=...; //????1???????
float C2[arcs2]=...; //????6???????
float C3[arcs3]=...; //????102???????
int X1[v1]=...;  //??????
int X2[v2]=...;
int X3[v3]=...;
dvar boolean x1[i in v1][arc in arcs1];//???????????????????????
dvar boolean x2[i in v2][arc in arcs2]; //???????????????????????
dvar boolean x3[i in v3][arc in arcs3]; //???????????????????????
minimize (sum(i in v1,a in arcs1) X1[i]*C1[a]*x1[i][a]+
sum(j in v2,b in arcs2) X2[j]*C2[b]*x2[j][b]+
sum(k in v3,c in arcs3) X3[k]*C3[c]*x3[k][c]);//?????

subject to{
forall(i in v1)
  {
    sum(o in arcs1)x1[i][o]==1;
  }
  forall(i in v2)
  {
    sum(o in arcs2)x2[i][o]==1;
  }
  forall(i in v3)
  {
    sum(o in arcs3)x3[i][o]==1;
  }
}